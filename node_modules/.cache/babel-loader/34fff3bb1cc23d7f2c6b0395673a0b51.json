{"ast":null,"code":"import _objectSpread from \"/home/jcbasson/Projects/ubs-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_JOKE, FETCH_JOKE_SUCCESS, FETCH_JOKE_FAILURE, START_POLLING, STOP_POLLING } from './actions';\nvar defaultStateList = {\n  isFetching: false,\n  items: [],\n  error: {},\n  isPolling: false\n};\nexport var jokeReducer = function jokeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStateList;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_JOKE:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case FETCH_JOKE_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        items: action.data\n      });\n\n    case FETCH_JOKE_FAILURE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.data\n      });\n\n    case START_POLLING:\n      return _objectSpread({}, state, {\n        isPolling: true\n      });\n\n    case STOP_POLLING:\n      return _objectSpread({}, state, {\n        isPolling: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/jcbasson/Projects/ubs-assessment/src/components/FXTicker/reducers.ts"],"names":["FETCH_JOKE","FETCH_JOKE_SUCCESS","FETCH_JOKE_FAILURE","START_POLLING","STOP_POLLING","defaultStateList","isFetching","items","error","isPolling","jokeReducer","state","action","type","data"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,kBAApB,EAAwCC,kBAAxC,EAA4DC,aAA5D,EAA2EC,YAA3E,QAA+F,WAA/F;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,UAAU,EAAE,KADW;AAEvBC,EAAAA,KAAK,EAAC,EAFiB;AAGvBC,EAAAA,KAAK,EAAC,EAHiB;AAIvBC,EAAAA,SAAS,EAAE;AAJY,CAAzB;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA2C;AAAA,MAA1CC,KAA0C,uEAAlCN,gBAAkC;AAAA,MAAhBO,MAAgB;;AACpE,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKb,UAAL;AACE,+BAAWW,KAAX;AAAkBL,QAAAA,UAAU,EAAC;AAA7B;;AACF,SAAKL,kBAAL;AACE,+BAAWU,KAAX;AAAkBL,QAAAA,UAAU,EAAC,KAA7B;AAAoCC,QAAAA,KAAK,EAACK,MAAM,CAACE;AAAjD;;AACF,SAAKZ,kBAAL;AACE,+BAAWS,KAAX;AAAkBL,QAAAA,UAAU,EAAC,KAA7B;AAAoCE,QAAAA,KAAK,EAACI,MAAM,CAACE;AAAjD;;AACF,SAAKX,aAAL;AACE,+BAAWQ,KAAX;AAAkBF,QAAAA,SAAS,EAAE;AAA7B;;AACF,SAAKL,YAAL;AACE,+BAAWO,KAAX;AAAkBF,QAAAA,SAAS,EAAE;AAA7B;;AACF;AACE,aAAOE,KAAP;AAZF;AAcD,CAfM","sourcesContent":["import {FETCH_JOKE, FETCH_JOKE_SUCCESS, FETCH_JOKE_FAILURE, START_POLLING, STOP_POLLING } from './actions';\n\nconst defaultStateList = {\n  isFetching: false,\n  items:[],\n  error:{},\n  isPolling: false,\n};\n\nexport const jokeReducer = (state = defaultStateList, action: any) => {\n  switch (action.type){\n  case FETCH_JOKE:\n    return {...state, isFetching:true};\n  case FETCH_JOKE_SUCCESS:\n    return {...state, isFetching:false, items:action.data};\n  case FETCH_JOKE_FAILURE:\n    return {...state, isFetching:false, error:action.data};\n  case START_POLLING:\n    return {...state, isPolling: true};\n  case STOP_POLLING:\n    return {...state, isPolling: false};\n  default:\n    return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}