{"ast":null,"code":"var _jsxFileName = \"/home/jcbasson/Projects/ubs-assessment/src/components/appointmentTypes/component.tsx\";\nimport * as React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { setAppointmentType, unsetAppointmentType } from './actions';\nimport { Title, AppointmentTypesContainer, AppointmentType } from './styled';\nexport var AppointmentTypesUI = function AppointmentTypesUI(_ref) {\n  var appointmentTypeOptions = _ref.appointmentTypeOptions,\n      setSelected = _ref.setSelected,\n      appointmentTypes = _ref.appointmentTypes;\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Appointment Type\"), React.createElement(AppointmentTypesContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, appointmentTypeOptions.map(function (at) {\n    return React.createElement(AppointmentType, {\n      key: at,\n      onClick: setSelected(appointmentTypes.includes(at), at),\n      isSelected: appointmentTypes.includes(at),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, at);\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var appointmentTypes = _.get(state, 'appointmentType', []);\n\n  var appointmentTypeOptions = [\"audio\", \"video\"];\n  return {\n    appointmentTypeOptions: appointmentTypeOptions,\n    appointmentTypes: appointmentTypes\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setSelected: function setSelected(isSelected, appointmentType) {\n      return function () {\n        dispatch(isSelected ? unsetAppointmentType(appointmentType) : setAppointmentType(appointmentType));\n      };\n    }\n  };\n};\n\nexport var AppointmentTypes = connect(mapStateToProps, mapDispatchToProps)(AppointmentTypesUI);","map":{"version":3,"sources":["/home/jcbasson/Projects/ubs-assessment/src/components/appointmentTypes/component.tsx"],"names":["React","_","connect","setAppointmentType","unsetAppointmentType","Title","AppointmentTypesContainer","AppointmentType","AppointmentTypesUI","appointmentTypeOptions","setSelected","appointmentTypes","map","at","includes","mapStateToProps","state","get","mapDispatchToProps","dispatch","isSelected","appointmentType","AppointmentTypes"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,WAAzD;AACA,SAASC,KAAT,EAAgBC,yBAAhB,EAA2CC,eAA3C,QAAkE,UAAlE;AAQA,OAAO,IAAMC,kBAA+C,GAAG,SAAlDA,kBAAkD,OAIzD;AAAA,MAHJC,sBAGI,QAHJA,sBAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,gBACI,QADJA,gBACI;AAEJ,SACE,0CACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,sBAAsB,CAACG,GAAvB,CAA2B,UAACC,EAAD;AAAA,WAC1B,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEA,EADP;AAEE,MAAA,OAAO,EAAEH,WAAW,CAACC,gBAAgB,CAACG,QAAjB,CAA0BD,EAA1B,CAAD,EAAgCA,EAAhC,CAFtB;AAGE,MAAA,UAAU,EAAEF,gBAAgB,CAACG,QAAjB,CAA0BD,EAA1B,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,EALH,CAD0B;AAAA,GAA3B,CADH,CAFF,CADF;AAgBD,CAtBM;;AAwBP,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAgB;AACtC,MAAML,gBAAgB,GAAGV,CAAC,CAACgB,GAAF,CAAMD,KAAN,EAAa,iBAAb,EAAgC,EAAhC,CAAzB;;AACA,MAAMP,sBAAsB,GAAG,CAC7B,OAD6B,EAE7B,OAF6B,CAA/B;AAIA,SAAO;AAAEA,IAAAA,sBAAsB,EAAtBA,sBAAF;AAA0BE,IAAAA,gBAAgB,EAAhBA;AAA1B,GAAP;AACD,CAPD;;AASA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAwB;AACjD,SAAO;AACLT,IAAAA,WAAW,EAAE,qBAACU,UAAD,EAAsBC,eAAtB;AAAA,aAAkD,YAAM;AACjEF,QAAAA,QAAQ,CAACC,UAAU,GAAEhB,oBAAoB,CAACiB,eAAD,CAAtB,GAAyClB,kBAAkB,CAACkB,eAAD,CAAtE,CAAR;AACH,OAFY;AAAA;AADR,GAAP;AAKD,CAND;;AAQA,OAAO,IAAMC,gBAAgB,GAAGpB,OAAO,CACrCa,eADqC,EAErCG,kBAFqC,CAAP,CAG9BV,kBAH8B,CAAzB","sourcesContent":["import * as React from 'react'\nimport _ from 'lodash'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { setAppointmentType, unsetAppointmentType } from './actions'\nimport { Title, AppointmentTypesContainer, AppointmentType } from './styled'\n\ninterface IAppointmentTypes {\n  appointmentTypes: string[];\n  setSelected: (isSelected: boolean, consultantType: string) => () => void;\n  appointmentTypeOptions: string[];\n}\n\nexport const AppointmentTypesUI: React.FC<IAppointmentTypes> = ({\n  appointmentTypeOptions,\n  setSelected,\n  appointmentTypes\n}) => {\n  \n  return (\n    <>\n      <Title>Appointment Type</Title>\n      <AppointmentTypesContainer>\n        {appointmentTypeOptions.map((at: string) => (\n          <AppointmentType\n            key={at}\n            onClick={setSelected(appointmentTypes.includes(at), at)}\n            isSelected={appointmentTypes.includes(at)}\n          >\n            {at}\n          </AppointmentType>\n        ))}\n      </AppointmentTypesContainer>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  const appointmentTypes = _.get(state, 'appointmentType', []);\n  const appointmentTypeOptions = [\n    \"audio\",\n    \"video\"\n  ];\n  return { appointmentTypeOptions, appointmentTypes }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setSelected: (isSelected: boolean, appointmentType: string) => () => {\n        dispatch(isSelected? unsetAppointmentType(appointmentType) :setAppointmentType(appointmentType))\n    },\n  }\n}\n\nexport const AppointmentTypes = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppointmentTypesUI)\n"]},"metadata":{},"sourceType":"module"}