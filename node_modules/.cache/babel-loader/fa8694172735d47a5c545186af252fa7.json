{"ast":null,"code":"import _regeneratorRuntime from \"/home/jcbasson/Projects/ubs-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\nimport { App } from './app';\nimport { Header } from './header';\nimport { consultantTypesReducer } from './consultantTypes';\nimport { defaultStore } from './state';\nimport { setUserID } from './user';\nimport { timeSlotReducer } from './timeSlots';\nimport { appointmentTypesReducer } from './appointmentTypes';\nimport { notesReducer } from './notes';\nimport { bookingsReducer } from './bookButton';\nimport { watchPollJokesSaga } from './FXTicker';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([watchPollJokesSaga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nvar reducers = {\n  consultantType: consultantTypesReducer,\n  appointmentType: appointmentTypesReducer,\n  timeSlot: timeSlotReducer,\n  userID: setUserID,\n  notes: notesReducer,\n  booking: bookingsReducer\n};\nexport { App, Header, reducers, defaultStore, rootSaga };","map":{"version":3,"sources":["/home/jcbasson/Projects/ubs-assessment/src/components/index.js"],"names":["rootSaga","all","App","Header","consultantTypesReducer","defaultStore","setUserID","timeSlotReducer","appointmentTypesReducer","notesReducer","bookingsReducer","watchPollJokesSaga","reducers","consultantType","appointmentType","timeSlot","userID","notes","booking"],"mappings":";;;;yBAcyBA,Q;;AAdzB,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,uBAAT,QAAwC,oBAAxC;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AAIA,eAAe,SAAUX,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRU,kBAAkB,EADV,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMf,IAAMC,QAAQ,GAAG;AACfC,EAAAA,cAAc,EAAET,sBADD;AAEfU,EAAAA,eAAe,EAAEN,uBAFF;AAGfO,EAAAA,QAAQ,EAAER,eAHK;AAIfS,EAAAA,MAAM,EAAEV,SAJO;AAKfW,EAAAA,KAAK,EAAER,YALQ;AAMfS,EAAAA,OAAO,EAAER;AANM,CAAjB;AAQA,SAASR,GAAT,EAAcC,MAAd,EAAsBS,QAAtB,EAAgCP,YAAhC,EAA8CL,QAA9C","sourcesContent":["import { all } from 'redux-saga/effects'\nimport { App } from './app'\nimport { Header } from './header'\nimport { consultantTypesReducer } from './consultantTypes'\nimport { defaultStore } from './state'\nimport { setUserID } from './user'\nimport { timeSlotReducer } from './timeSlots'\nimport { appointmentTypesReducer } from './appointmentTypes'\nimport { notesReducer } from './notes'\nimport { bookingsReducer } from './bookButton'\nimport { watchPollJokesSaga } from './FXTicker';\n\n\n\nexport default function* rootSaga() {\n  yield all([\n    watchPollJokesSaga(),\n  ])\n}\n\nconst reducers = {\n  consultantType: consultantTypesReducer,\n  appointmentType: appointmentTypesReducer,\n  timeSlot: timeSlotReducer,\n  userID: setUserID,\n  notes: notesReducer,\n  booking: bookingsReducer,\n}\nexport { App, Header, reducers, defaultStore, rootSaga }\n"]},"metadata":{},"sourceType":"module"}