{"ast":null,"code":"var _jsxFileName = \"/home/jcbasson/Projects/ubs-assessment/src/components/FXTicker/component.tsx\";\nimport * as React from \"react\";\nimport { connect } from 'react-redux';\nimport { startPolling } from './actions';\nexport var FXTickerUI = function FXTickerUI(_ref) {\n  var clickHandler = _ref.clickHandler;\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Star Polling\"));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clickHandler: function clickHandler() {\n      return dispatch(startPolling());\n    }\n  };\n};\n\nexport var FXTicker = connect(mapStateToProps, mapDispatchToProps)(FXTickerUI);","map":{"version":3,"sources":["/home/jcbasson/Projects/ubs-assessment/src/components/FXTicker/component.tsx"],"names":["React","connect","startPolling","FXTickerUI","clickHandler","mapStateToProps","state","mapDispatchToProps","dispatch","FXTicker"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,WAA7B;AAOA,OAAO,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,OAAoB;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;AACjE,SACE,0CACE;AAAQ,IAAA,OAAO,EAAEA,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD,CANM;;AASP,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAgB;AAEpC,SAAO,EAAP;AACD,CAHH;;AAKE,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAwB;AACjD,SAAO;AACNJ,IAAAA,YAAY,EAAE;AAAA,aAAMI,QAAQ,CAACN,YAAY,EAAb,CAAd;AAAA;AADR,GAAP;AAGD,CAJD;;AAMA,OAAO,IAAMO,QAAQ,GAAGR,OAAO,CAC7BI,eAD6B,EAE7BE,kBAF6B,CAAP,CAGtBJ,UAHsB,CAAjB","sourcesContent":["import * as React from \"react\";\nimport _ from 'lodash'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { startPolling } from './actions'\n\n\ninterface IFXTicker {\n    clickHandler: () => void;\n}\n\nexport const FXTickerUI: React.FC<IFXTicker> = ({clickHandler}) => {\n  return (\n    <>\n      <button onClick={clickHandler}>Star Polling</button>\n    </>\n  );\n};\n\n\nconst mapStateToProps = (state: any) => {\n \n    return {  }\n  }\n  \n  const mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n     clickHandler: () => dispatch(startPolling())\n    }\n  }\n  \n  export const FXTicker = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(FXTickerUI)\n  \n"]},"metadata":{},"sourceType":"module"}