{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/jcbasson/Projects/ubs-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/jcbasson/Projects/ubs-assessment/src/components/user/component.tsx\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    color: #343a46;\\n    font-weight: bold;\\n    font-family: sans-serif;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  max-height: 60px;\\n  margin-right: 5px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query User($id:Int!){\\n    user(id: $id){\\n      id,\\n      firstName\\n      lastName\\n      avatar\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nexport var GET_USER_QUERY = gql(_templateObject());\nexport var UserUI = function UserUI(_ref) {\n  var id = _ref.id;\n\n  var _useQuery = useQuery(GET_USER_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return null;\n  if (error) return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Error!\");\n\n  var _$get = _.get(data, 'user'),\n      avatar = _$get.avatar,\n      firstName = _$get.firstName,\n      lastName = _$get.lastName;\n\n  return React.createElement(UserContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(AvatarImg, {\n    src: avatar,\n    alt: \"User avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, firstName, \" \", lastName));\n};\n\nfunction mapStateToProps(state) {\n  var userID = state.userID;\n  return {\n    id: userID\n  };\n}\n\nexport var User = connect(mapStateToProps)(UserUI);\nvar UserContainer = styled.div(_templateObject2());\nvar AvatarImg = styled.img(_templateObject3());\nvar Name = styled.label(_templateObject4());","map":{"version":3,"sources":["/home/jcbasson/Projects/ubs-assessment/src/components/user/component.tsx"],"names":["React","styled","gql","useQuery","_","connect","GET_USER_QUERY","UserUI","id","variables","loading","error","data","get","avatar","firstName","lastName","mapStateToProps","state","userID","User","UserContainer","div","AvatarImg","img","Name","label"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,IAAMC,cAAc,GAAGJ,GAAH,mBAApB;AAeP,OAAO,IAAMK,MAAuB,GAAG,SAA1BA,MAA0B,OAAU;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAAA,kBACdL,QAAQ,CAACG,cAAD,EAAiB;AACxDG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AAD6C,GAAjB,CADM;AAAA,MACvCE,OADuC,aACvCA,OADuC;AAAA,MAC9BC,KAD8B,aAC9BA,KAD8B;AAAA,MACvBC,IADuB,aACvBA,IADuB;;AAK/C,MAAIF,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;;AANoC,cAQTP,CAAC,CAACS,GAAF,CAAMD,IAAN,EAAY,MAAZ,CARS;AAAA,MAQxCE,MARwC,SAQxCA,MARwC;AAAA,MAQhCC,SARgC,SAQhCA,SARgC;AAAA,MAQrBC,QARqB,SAQrBA,QARqB;;AAU/C,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEF,MAAhB;AAAwB,IAAA,GAAG,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAP,OAAmBC,QAAnB,CAFF,CADF;AAMD,CAhBM;;AAkBP,SAASC,eAAT,CAAyBC,KAAzB,EAAqC;AAAA,MAC3BC,MAD2B,GAChBD,KADgB,CAC3BC,MAD2B;AAEnC,SAAO;AAAEX,IAAAA,EAAE,EAAEW;AAAN,GAAP;AACD;;AAED,OAAO,IAAMC,IAAI,GAAGf,OAAO,CAACY,eAAD,CAAP,CAAyBV,MAAzB,CAAb;AAEP,IAAMc,aAAa,GAAGpB,MAAM,CAACqB,GAAV,oBAAnB;AAKA,IAAMC,SAAS,GAAGtB,MAAM,CAACuB,GAAV,oBAAf;AAKA,IAAMC,IAAI,GAAGxB,MAAM,CAACyB,KAAV,oBAAV","sourcesContent":["import * as React from 'react'\nimport styled from 'styled-components'\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\n\nexport const GET_USER_QUERY = gql`\n  query User($id:Int!){\n    user(id: $id){\n      id,\n      firstName\n      lastName\n      avatar\n    }\n  }\n`;\n\ninterface IUser {\n  readonly id: number;\n}\n\nexport const UserUI: React.FC<IUser> = ({id}) => {\n  const { loading, error, data } = useQuery(GET_USER_QUERY, {\n    variables: { id },\n  });\n\n  if (loading) return null;\n  if (error) return (<h2>Error!</h2>);\n\n  const {avatar, firstName, lastName} = _.get(data, 'user');\n\n  return (\n    <UserContainer>\n      <AvatarImg src={avatar} alt=\"User avatar\"></AvatarImg>\n      <Name>{firstName} {lastName}</Name>\n    </UserContainer>\n  )\n}\n\nfunction mapStateToProps(state: any) {\n  const { userID } = state\n  return { id: userID }\n}\n\nexport const User = connect(mapStateToProps)(UserUI)\n\nconst UserContainer = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst AvatarImg = styled.img`\n  max-height: 60px;\n  margin-right: 5px;\n`;\n\nconst Name = styled.label`\n    color: #343a46;\n    font-weight: bold;\n    font-family: sans-serif;\n`\n"]},"metadata":{},"sourceType":"module"}