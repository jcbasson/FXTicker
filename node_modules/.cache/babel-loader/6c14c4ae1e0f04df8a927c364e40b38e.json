{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/jcbasson/Projects/ubs-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/jcbasson/Projects/ubs-assessment/src/components/notes/component.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 200px;\\n  width: 100%;\\n  border-radius: 10px;\\n  margin-bottom: 100px;\\n  font-family: sans-serif;\\n  outline: none;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: #343a46;\\n  font-weight: bold;\\n  font-size: 20px;\\n  margin-bottom: 15px;\\n  font-family: sans-serif;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { setNotes as _setNotes } from './actions';\nexport var NotesUI = function NotesUI(_ref) {\n  var notes = _ref.notes,\n      setNotes = _ref.setNotes;\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(NotesEditor, {\n    onChange: setNotes,\n    value: notes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var notes = _.get(state, 'notes', '');\n\n  return {\n    notes: notes\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setNotes: function setNotes(event) {\n      dispatch(_setNotes(event.target.value));\n    }\n  };\n};\n\nexport var Notes = connect(mapStateToProps, mapDispatchToProps)(NotesUI);\nexport var Title = styled.h4(_templateObject());\nvar NotesEditor = styled.textarea(_templateObject2());","map":{"version":3,"sources":["/home/jcbasson/Projects/ubs-assessment/src/components/notes/component.tsx"],"names":["React","styled","connect","_","setNotes","NotesUI","notes","mapStateToProps","state","get","mapDispatchToProps","dispatch","event","target","value","Notes","Title","h4","NotesEditor","textarea"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAQ,IAARA,SAAT,QAAyB,WAAzB;AAMA,OAAO,IAAMC,OAA2B,GAAG,SAA9BA,OAA8B,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfF,QAAe,QAAfA,QAAe;AAClE,SACE,0CACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,QAAvB;AAAiC,IAAA,KAAK,EAAEE,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPM;;AASP,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAgB;AACtC,MAAMF,KAAK,GAAGH,CAAC,CAACM,GAAF,CAAMD,KAAN,EAAa,OAAb,EAAsB,EAAtB,CAAd;;AACA,SAAO;AAAEF,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD,CAHD;;AAKA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAwB;AACjD,SAAO;AACLP,IAAAA,QAAQ,EAAE,kBAACQ,KAAD,EAAgB;AACxBD,MAAAA,QAAQ,CAACP,SAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,OAAO,IAAMC,KAAK,GAAGb,OAAO,CAC1BK,eAD0B,EAE1BG,kBAF0B,CAAP,CAGnBL,OAHmB,CAAd;AAKP,OAAO,IAAMW,KAAK,GAAGf,MAAM,CAACgB,EAAV,mBAAX;AAQP,IAAMC,WAAW,GAAGjB,MAAM,CAACkB,QAAV,oBAAjB","sourcesContent":["import * as React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport _ from 'lodash'\nimport { setNotes } from './actions'\n\ninterface INotesUI {\n  notes: string\n  setNotes: (event: any) => void\n}\nexport const NotesUI: React.FC<INotesUI> = ({ notes, setNotes }) => {\n  return (\n    <>\n      <Title>Notes</Title>\n      <NotesEditor onChange={setNotes} value={notes}></NotesEditor>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  const notes = _.get(state, 'notes', '')\n  return { notes }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setNotes: (event: any) => {\n      dispatch(setNotes(event.target.value))\n    },\n  }\n}\n\nexport const Notes = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NotesUI)\n\nexport const Title = styled.h4`\n  color: #343a46;\n  font-weight: bold;\n  font-size: 20px;\n  margin-bottom: 15px;\n  font-family: sans-serif;\n`\n\nconst NotesEditor = styled.textarea`\n  height: 200px;\n  width: 100%;\n  border-radius: 10px;\n  margin-bottom: 100px;\n  font-family: sans-serif;\n  outline: none;\n`\n"]},"metadata":{},"sourceType":"module"}